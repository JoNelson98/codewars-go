{
    "projectId": "68636ed39c452af74e098868",
    "authorization": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6IjYzY2U5NzAxODM0Mjc2NDdlODA0MTgzZSIsImV4cCI6MTc1MjIxMDk0MX0.cfmIlw9lXsh-GOMcEwehWdGrFciwyGuLimy-AYoJLsI",
    "id": "57e76bc428d6fbc2d500036d",
    "name": "Convert a string to an array",
    "slug": "convert-a-string-to-an-array",
    "description": "Write a function to split a string and convert it into an array of words.\n\n### Examples (Input ==> Output):\n\n```\n\"Robin Singh\" ==> [\"Robin\", \"Singh\"]\n\n\"I love arrays they are my favorite\" ==> [\"I\", \"love\", \"arrays\", \"they\", \"are\", \"my\", \"favorite\"]\n```\n\n```if:c\nWords will be separated by exactly one space, without leading or trailing spaces.\n\nThere will only be letters and spaces in the input string.\n```\n",
    "csrfToken": "LMUCU/AXvTvqllWYaj/+hLgZcFzjnmd3rdhw6fQLzEyjJczQbCw2mgHfxAwHjWfa2eB8i4KuKkB9Z1JMfsZ6Ew==",
    "languageName": "go",
    "languageVersion": "1.20",
    "exampleFixture": "// TODO: replace with your own tests (TDD). An example to get you started is included below.\n// Ginkgo BDD Testing Framework <http://onsi.github.io/ginkgo/>\n// Gomega Matcher Library <http://onsi.github.io/gomega/>\n\n\npackage kata_test\nimport (\n  . \"github.com/onsi/ginkgo\"\n  . \"github.com/onsi/gomega\"\n  . \"codewarrior/kata\"\n)\n\n\nvar _ = Describe(\"Tests\", func() {\n     It(\"Sample tests\", func() {\n       Expect(StringToArray(\"Robin Singh\")).To(Equal([]string{\"Robin\", \"Singh\"}))\n       Expect(StringToArray(\"CodeWars\")).To(Equal([]string{\"CodeWars\"}))\n       Expect(StringToArray(\"I love arrays they are my favorite\")).To(Equal([]string{\"I\", \"love\", \"arrays\", \"they\", \"are\", \"my\", \"favorite\"}))\n       Expect(StringToArray(\"1 2 3\")).To(Equal([]string{\"1\", \"2\", \"3\"}))\n     })\n})\n",
    "fixture": "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\nmzflgR6MtJ8gXEZEYW4oEPD7fzDxCn2P+oUHNg==\n--8VbpB8mVuckX2hyyosdogw==--u",
    "setup": "package kata\n\n\nfunc StringToArray(str string) []string {\n      // your code here\n}\n",
    "package": "",
    "testFramework": "ginkgo",
    "solutionId": "68636ed3c2185990e72e39c0"
}